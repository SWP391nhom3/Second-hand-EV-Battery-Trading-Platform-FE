import React, { useState } from 'react';
import {
  Modal,
  Row,
  Col,
  Image,
  Button,
  Tag,
  Rate,
  Divider,
  Descriptions,
  Avatar,
  Space,
  InputNumber,
  Tabs,
  List,
  Typography,
  Progress,
} from 'antd';
import {
  ShoppingCartOutlined,
  HeartOutlined,
  ShareAltOutlined,
  UserOutlined,
  EnvironmentOutlined,
  ClockCircleOutlined,
  PhoneOutlined,
  MessageOutlined,
  SafetyOutlined,
  ThunderboltOutlined,
  CheckCircleOutlined,
  WarningOutlined,
  CalendarOutlined,
} from '@ant-design/icons';
import styles from './ProductDetailModal.module.css';

const { Title, Text, Paragraph } = Typography;

const ProductDetailModal = ({ visible, product, onClose, onAddToCart }) => {
  const [quantity, setQuantity] = useState(1);
  const [selectedImage, setSelectedImage] = useState(0);

  if (!product) return null;

  const {
    id,
    name,
    brand,
    price,
    originalPrice,
    image,
    capacity,
    voltage,
    condition,
    warranty,
    rating,
    reviews,
    seller,
    batteryHealth,
    usageYears,
    location,
    postedDate,
    membershipLevel,
    tag,
    inStock = true,
  } = product;

  // Mock additional images
  const images = [
    image,
    'https://images.unsplash.com/photo-1617788138017-80ad40651399?w=800',
    'https://images.unsplash.com/photo-1593941707882-a5bba14938c7?w=800',
    'https://images.unsplash.com/photo-1612538498613-76d10ae4b5aef?w=800',
  ];

  const getMembershipColor = (level) => {
    switch (level) {
      case 4:
        return { color: '#667eea', icon: 'üíé', label: 'Kim c∆∞∆°ng' };
      case 3:
        return { color: '#f093fb', icon: 'ü•á', label: 'V√†ng' };
      case 2:
        return { color: '#4facfe', icon: 'ü•à', label: 'B·∫°c' };
      case 1:
        return { color: '#fa709a', icon: 'ü•â', label: 'ƒê·ªìng' };
      default:
        return { color: '#888', icon: '', label: '' };
    }
  };

  const membershipInfo = getMembershipColor(membershipLevel);

  const handleAddToCart = () => {
    onAddToCart({ ...product, quantity });
    Modal.success({
      title: 'Th√†nh c√¥ng!',
      content: `ƒê√£ th√™m ${quantity} s·∫£n ph·∫©m v√†o gi·ªè h√†ng`,
    });
  };

  const handleContactSeller = () => {
    Modal.info({
      title: 'Li√™n h·ªá ng∆∞·ªùi b√°n',
      content: `S·ªë ƒëi·ªán tho·∫°i: 0${Math.floor(Math.random() * 900000000 + 100000000)}`,
    });
  };

  return (
    <Modal
      open={visible}
      onCancel={onClose}
      footer={null}
      width={1200}
      className={styles.productModal}
      centered
    >
      <Row gutter={[32, 32]}>
        {/* Left Side - Images */}
        <Col xs={24} md={12}>
          <div className={styles.imageSection}>
            <div className={styles.mainImage}>
              <Image
                src={images[selectedImage]}
                alt={name}
                width="100%"
                height={400}
                style={{ objectFit: 'cover', borderRadius: '12px' }}
              />
              {membershipLevel && (
                <div
                  className={styles.membershipBadge}
                  style={{ background: membershipInfo.color }}
                >
                  {membershipInfo.icon} {tag}
                </div>
              )}
            </div>
            <div className={styles.thumbnails}>
              {images.map((img, index) => (
                <div
                  key={index}
                  className={`${styles.thumbnail} ${
                    selectedImage === index ? styles.activeThumbnail : ''
                  }`}
                  onClick={() => setSelectedImage(index)}
                >
                  <img src={img} alt={`${name} ${index + 1}`} />
                </div>
              ))}
            </div>
          </div>
        </Col>

        {/* Right Side - Details */}
        <Col xs={24} md={12}>
          <div className={styles.detailSection}>
            {/* Seller Info */}
            <div className={styles.sellerCard}>
              <Avatar size={48} icon={<UserOutlined />} src={seller?.avatar} />
              <div className={styles.sellerInfo}>
                <Text strong style={{ fontSize: '16px' }}>
                  {seller?.name || 'Ng∆∞·ªùi b√°n'}
                </Text>
                <div className={styles.sellerMeta}>
                  <Rate disabled defaultValue={seller?.rating || 4.5} style={{ fontSize: 12 }} />
                  <Text type="secondary" style={{ fontSize: 12 }}>
                    ({seller?.totalSales || 0} giao d·ªãch)
                  </Text>
                </div>
                <div className={styles.sellerLocation}>
                  <EnvironmentOutlined />
                  <Text type="secondary">{location}</Text>
                </div>
              </div>
              <Space direction="vertical" size="small">
                <Button
                  icon={<PhoneOutlined />}
                  size="small"
                  type="primary"
                  onClick={handleContactSeller}
                >
                  G·ªçi
                </Button>
                <Button icon={<MessageOutlined />} size="small">
                  Chat
                </Button>
              </Space>
            </div>

            <Divider />

            {/* Product Title */}
            <div className={styles.titleSection}>
              <Tag color="blue">{brand}</Tag>
              <Title level={3} style={{ margin: '8px 0' }}>
                {name}
              </Title>
              <Space>
                <Rate disabled defaultValue={rating} allowHalf style={{ fontSize: 16 }} />
                <Text type="secondary">({reviews} ƒë√°nh gi√°)</Text>
                <Divider type="vertical" />
                <ClockCircleOutlined />
                <Text type="secondary">{postedDate}</Text>
              </Space>
            </div>

            <Divider />

            {/* Price */}
            <div className={styles.priceSection}>
              <div className={styles.currentPrice}>
                {price?.toLocaleString('vi-VN')}‚Ç´
              </div>
              {originalPrice && originalPrice > price && (
                <div className={styles.priceRow}>
                  <Text delete type="secondary" style={{ fontSize: 16 }}>
                    {originalPrice?.toLocaleString('vi-VN')}‚Ç´
                  </Text>
                  <Tag color="red" style={{ marginLeft: 8 }}>
                    Gi·∫£m {Math.round(((originalPrice - price) / originalPrice) * 100)}%
                  </Tag>
                </div>
              )}
            </div>

            <Divider />

            {/* Battery Health */}
            <div className={styles.healthSection}>
              <div className={styles.healthHeader}>
                <SafetyOutlined style={{ fontSize: 20, color: '#52c41a' }} />
                <Text strong style={{ fontSize: 16 }}>
                  T√¨nh tr·∫°ng pin
                </Text>
              </div>
              <div className={styles.healthBar}>
                <Text>ƒê·ªô kh·ªèe pin:</Text>
                <Progress
                  percent={batteryHealth || 90}
                  strokeColor={{
                    '0%': '#52c41a',
                    '100%': '#73d13d',
                  }}
                  style={{ flex: 1, margin: '0 12px' }}
                />
                <Text strong>{batteryHealth || 90}%</Text>
              </div>
              <Tag
                color={
                  condition === 'Nh∆∞ m·ªõi'
                    ? 'green'
                    : condition === 'T·ªët'
                    ? 'blue'
                    : 'orange'
                }
                style={{ marginTop: 8 }}
              >
                {condition}
              </Tag>
            </div>

            <Divider />

            {/* Specifications */}
            <Descriptions column={2} size="small" bordered>
              <Descriptions.Item
                label={
                  <>
                    <ThunderboltOutlined /> Dung l∆∞·ª£ng
                  </>
                }
              >
                <Text strong>{capacity} kWh</Text>
              </Descriptions.Item>
              <Descriptions.Item
                label={
                  <>
                    <SafetyOutlined /> ƒêi·ªán √°p
                  </>
                }
              >
                <Text strong>{voltage}V</Text>
              </Descriptions.Item>
              <Descriptions.Item
                label={
                  <>
                    <CalendarOutlined /> Th·ªùi gian s·ª≠ d·ª•ng
                  </>
                }
              >
                <Text strong>{usageYears || warranty} nƒÉm</Text>
              </Descriptions.Item>
              <Descriptions.Item
                label={
                  <>
                    <CheckCircleOutlined /> B·∫£o h√†nh
                  </>
                }
              >
                <Text strong>{warranty} th√°ng</Text>
              </Descriptions.Item>
            </Descriptions>

            <Divider />

            {/* Quantity & Actions */}
            <div className={styles.actionSection}>
              <div className={styles.quantitySection}>
                <Text strong>S·ªë l∆∞·ª£ng:</Text>
                <InputNumber
                  min={1}
                  max={10}
                  value={quantity}
                  onChange={setQuantity}
                  style={{ width: 100, margin: '0 12px' }}
                />
                <Text type="secondary">(C√≤n {Math.floor(Math.random() * 10 + 1)} s·∫£n ph·∫©m)</Text>
              </div>

              <Space direction="vertical" size="middle" style={{ width: '100%', marginTop: 16 }}>
                <Button
                  type="primary"
                  size="large"
                  icon={<ShoppingCartOutlined />}
                  onClick={handleAddToCart}
                  disabled={!inStock}
                  block
                  style={{ height: 50, fontSize: 16, fontWeight: 600 }}
                >
                  {inStock ? 'Th√™m v√†o gi·ªè h√†ng' : 'H·∫øt h√†ng'}
                </Button>
                <Space style={{ width: '100%', justifyContent: 'center' }}>
                  <Button icon={<HeartOutlined />} size="large">
                    Y√™u th√≠ch
                  </Button>
                  <Button icon={<ShareAltOutlined />} size="large">
                    Chia s·∫ª
                  </Button>
                </Space>
              </Space>
            </div>

            {/* Additional Info */}
            <div className={styles.infoBox}>
              <Space direction="vertical" size="small">
                <div className={styles.infoItem}>
                  <CheckCircleOutlined style={{ color: '#52c41a' }} />
                  <Text>ƒê√£ ki·ªÉm tra ch·∫•t l∆∞·ª£ng</Text>
                </div>
                <div className={styles.infoItem}>
                  <CheckCircleOutlined style={{ color: '#52c41a' }} />
                  <Text>Giao h√†ng mi·ªÖn ph√≠</Text>
                </div>
                <div className={styles.infoItem}>
                  <CheckCircleOutlined style={{ color: '#52c41a' }} />
                  <Text>H·ªó tr·ª£ l·∫Øp ƒë·∫∑t</Text>
                </div>
              </Space>
            </div>
          </div>
        </Col>
      </Row>

      {/* Additional Tabs */}
      <Divider />
      <Tabs defaultActiveKey="1">
        <Tabs.TabPane tab="M√¥ t·∫£ chi ti·∫øt" key="1">
          <Paragraph>
            Pin {brand} {name} l√† s·∫£n ph·∫©m ch·∫•t l∆∞·ª£ng cao, ƒë√£ qua s·ª≠ d·ª•ng {usageYears || 2} nƒÉm
            nh∆∞ng v·∫´n gi·ªØ ƒë∆∞·ª£c {batteryHealth || 90}% dung l∆∞·ª£ng ban ƒë·∫ßu. Pin ƒë∆∞·ª£c ki·ªÉm tra k·ªπ
            l∆∞·ª°ng, ƒë·∫£m b·∫£o an to√†n v√† hi·ªáu su·∫•t ·ªïn ƒë·ªãnh.
          </Paragraph>
          <List
            header={<Text strong>∆Øu ƒëi·ªÉm:</Text>}
            dataSource={[
              'Dung l∆∞·ª£ng cao, ph√π h·ª£p nhi·ªÅu ·ª©ng d·ª•ng',
              'ƒê·ªô b·ªÅn cao, tu·ªïi th·ªç l√¢u d√†i',
              'ƒê√£ qua ki·ªÉm tra an to√†n nghi√™m ng·∫∑t',
              'B·∫£o h√†nh ch√≠nh h√£ng',
              'H·ªó tr·ª£ l·∫Øp ƒë·∫∑t mi·ªÖn ph√≠',
            ]}
            renderItem={(item) => (
              <List.Item>
                <CheckCircleOutlined style={{ color: '#52c41a', marginRight: 8 }} />
                {item}
              </List.Item>
            )}
          />
        </Tabs.TabPane>
        <Tabs.TabPane tab="Ch√≠nh s√°ch" key="2">
          <Space direction="vertical" size="middle" style={{ width: '100%' }}>
            <div>
              <Text strong>Ch√≠nh s√°ch ƒë·ªïi tr·∫£:</Text>
              <Paragraph>
                - ƒê·ªïi tr·∫£ trong v√≤ng 7 ng√†y n·∫øu s·∫£n ph·∫©m l·ªói
                <br />- Ho√†n ti·ªÅn 100% n·∫øu kh√¥ng ƒë√∫ng m√¥ t·∫£
              </Paragraph>
            </div>
            <div>
              <Text strong>Ch√≠nh s√°ch b·∫£o h√†nh:</Text>
              <Paragraph>
                - B·∫£o h√†nh {warranty} th√°ng
                <br />- H·ªó tr·ª£ k·ªπ thu·∫≠t 24/7
              </Paragraph>
            </div>
            <div>
              <Text strong>Ch√≠nh s√°ch v·∫≠n chuy·ªÉn:</Text>
              <Paragraph>
                - Giao h√†ng to√†n qu·ªëc
                <br />- Mi·ªÖn ph√≠ v·∫≠n chuy·ªÉn
                <br />- Th·ªùi gian: 3-5 ng√†y l√†m vi·ªác
              </Paragraph>
            </div>
          </Space>
        </Tabs.TabPane>
      </Tabs>
    </Modal>
  );
};

export default ProductDetailModal;
